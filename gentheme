#!/bin/bash
# Script to generate Numix icon theme from source SVGs
#
# Copyright (C) 2013  Satyajit Sahoo
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

name="Numix"
comment="Official icon theme from the Numix project"
base="48"
sizes=( 16 22 24 32 48 64 128 256 )

cleanup() {
# Cleanup stuff
rm -rf "./$name"
}

genicons() {
SAVEIFS="$IFS"
IFS="
"
mkdir -p "./$name"
for size in "${sizes[@]}"; do
    for source in `find "./src" -maxdepth 1 ! -path "./src" -type d | sed -r "s/^.+\///"`; do
        if [[ "$source" == "scalable" ]]; then
            # Treat the scalable directory differently
            cp -rf "./src/$source" "./$name/$source"            
        elif [[ "$source" == "$base" ]]; then
            for dir in `find "./src/$source" -maxdepth 1 ! -path "./src/$source" -type d | sed -r "s/^.+\///"`; do
                # Make the required directory
                mkdir -p "./$name/$size/$dir"
                for icon in `find "./src/$source/$dir" -maxdepth 1 -name "*.svg" | sed -r "s/^.+\///"`; do
                    # Delete the target icon file first, if exists
                    rm -f "./$name/$size/$dir/$icon"
                    if [[ ! -e "./src/$size/$dir/$icon" ]]; then
                        if [[ ! -h "./src/$source/$dir/$icon" ]]; then
                            # Scale the SVG icon
                            rsvg-convert "./src/$source/$dir/$icon" -a -h "$size" -f svg -o "./$name/$size/$dir/$icon"
                            # Use px instead of pt
                            sed -i "s/\"${size}pt\"/\"${size}px\"/g" "./$name/$size/$dir/$icon"
                            # Optimize SVG
                            svgcleaner-cli "./$name/$size/$dir/$icon" "./$name/$size/$dir/$icon" --keep-singly-grads --keep-absolute-paths --join-style-atts --keep-basic-shapes
                        else
                            cp -rdf "./src/$source/$dir/$icon" "./$name/$size/$dir/$icon"
                        fi
                    else
                        cp -rdf "./src/$size/$dir/$icon" "./$name/$size/$dir/$icon"
                    fi
                done
            done
        fi
    done
done
IFS="$SAVEIFS"
}

genindex() {
# Generate index.theme
cat <<EOF | tee "./$name/index.theme" > /dev/null 2>&1
[Icon Theme]
Name=$name
Comment=$comment

Inherits=gnome,hicolor

Example=directory-x-normal

# Directory list
EOF

printf "Directories=" >> "./$name/index.theme"
for dir in `find "./$name" -maxdepth 1 ! -path "./$name" -type d | sed -r "s/^.+\///"`; do
    for subdir in `find "./$name/$dir" -maxdepth 1 ! -path "./$name/$dir" -type d | sed -r "s/^.+\///"`; do
        printf "$dir/$subdir," >> "./$name/index.theme"
    done;
done

printf "\n\n" >> "./$name/index.theme"
for dir in `find "./$name" -maxdepth 1 ! -path "./$name" -type d | sed -r "s/^.+\///"`; do
    for subdir in `find "./$name/$dir" -maxdepth 1 ! -path "./$name/$dir" -type d | sed -r "s/^.+\///"`; do
        printf "[$dir/$subdir]\nContext=$(printf $subdir | sed -e 's/^./\U&\E/g')\n" >> "./$name/index.theme"
        if [[ "$dir" == "scalable" ]]; then
            printf "Size=16\nMinSize=16\nMaxSize=256\nType=scalable\n\n" >> "./$name/index.theme"
        else
            printf "Size=$dir\nType=fixed\n\n" >> "./$name/index.theme"
        fi
    done;
done
}

case "$1" in
    "icons")
        genicons;;
    "index")
        genindex;;
    "update")
        genicons
        genindex;;
    *)
        cleanup
        genicons
        genindex;;
esac
